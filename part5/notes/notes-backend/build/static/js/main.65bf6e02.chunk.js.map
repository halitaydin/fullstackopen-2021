{"version":3,"sources":["components/Note.js","services/notes.js","components/Notification.js","components/Footer.js","App.js","index.js"],"names":["Note","notes","toggleImportance","label","important","className","content","onClick","baseUrl","exportedRequests","getAll","axios","get","then","response","data","create","newObject","post","update","id","put","Notification","message","Footer","style","color","fontStyle","fontSize","App","useState","setNotes","newNote","setNewNote","showAll","setShowAll","errorMessage","setErrorMessage","useEffect","noteService","initialNotes","notesToShow","filter","note","map","find","n","changedNote","console","log","returnedNote","catch","error","setTimeout","toggleImportanceOf","onSubmit","event","preventDefault","noteObject","date","Date","concat","value","onChange","target","placeholder","type","ReactDOM","render","document","getElementById"],"mappings":"4KAeeA,EAbF,SAAC,GAA+B,IAA9BC,EAA6B,EAA7BA,MAAOC,EAAsB,EAAtBA,iBACZC,EAAQF,EAAMG,UAClB,qBAAuB,iBACzB,OACI,qBAAIC,UAAU,OAAd,UACKJ,EAAMK,QAAS,IAChB,wBAAQC,QAASL,EAAjB,SACKC,Q,gBCPXK,EAAU,aAmBDC,EAFU,CAAEC,OAfZ,WAEX,OADgBC,IAAMC,IAAIJ,GACXK,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAaVC,OAVpB,SAAAC,GAEX,OADgBN,IAAMO,KAAKV,EAASS,GACrBJ,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAQFI,OAL5B,SAACC,EAAIH,GAEhB,OADgBN,IAAMU,IAAN,UAAab,EAAb,YAAwBY,GAAMH,GAC/BJ,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UCF9BO,EAZM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACpB,OAAgB,OAAZA,EACK,KAIP,qBAAKlB,UAAU,QAAf,SACGkB,KCOMC,EAdA,WAMX,OACE,sBAAKC,MANa,CAClBC,MAAO,QACPC,UAAW,SACXC,SAAU,IAGV,UACE,uBACA,2GC4EOC,EAjFH,WAAO,IAAD,EACUC,mBAAS,IADnB,mBACT7B,EADS,KACF8B,EADE,OAEcD,mBAAS,IAFvB,mBAETE,EAFS,KAEAC,EAFA,OAGcH,oBAAS,GAHvB,mBAGTI,EAHS,KAGAC,EAHA,OAIwBL,mBAAS,MAJjC,mBAITM,EAJS,KAIKC,EAJL,KAMhBC,qBAAU,WACRC,EAAY7B,SAASG,MAAK,SAAC2B,GACzBT,EAASS,QAEV,IAEH,IAeMC,EAAcP,EAChBjC,EACAA,EAAMyC,QAAO,SAACC,GAAD,OAA6B,IAAnBA,EAAKvC,aAqBhC,OACE,gCACE,uCACA,cAAC,EAAD,CAAcmB,QAASa,IACvB,8BACE,yBAAQ7B,QAAS,kBAAM4B,GAAYD,IAAnC,kBACQA,EAAU,YAAc,WAGlC,6BACGO,EAAYG,KAAI,SAACD,GAAD,OACf,cAAC,EAAD,CAEA1C,MAAO0C,EACPzC,iBAAkB,kBAjCG,SAAAkB,GACzB,IAAMuB,EAAO1C,EAAM4C,MAAK,SAAAC,GAAC,OAAIA,EAAE1B,KAAOA,KAChC2B,EAAW,2BAAQJ,GAAR,IAAcvC,WAAYuC,EAAKvC,YAEhD4C,QAAQC,IAAR,wBAA6B7B,EAA7B,yBAEAmB,EAAYpB,OAAOC,EAAI2B,GAAalC,MAAK,SAAAqC,GACvCnB,EAAS9B,EAAM2C,KAAI,SAAAD,GAAI,OAAIA,EAAKvB,KAAOA,EAAKuB,EAAOO,SAClDC,OAAM,SAAAC,GACPf,EAAgB,SAAD,OACJM,EAAKrC,QADD,sCAGf+C,YAAW,WACThB,EAAgB,QACf,KACHN,EAAS9B,EAAMyC,QAAO,SAAAI,GAAC,OAAIA,EAAE1B,KAAOA,SAkBVkC,CAAmBX,EAAKvB,MAF3CuB,EAAKvB,SAMd,uBAAMmC,SAxDM,SAACC,GACfA,EAAMC,iBACN,IAAMC,EAAa,CACjBpD,QAAS0B,EACT2B,KAAM,IAAIC,MAGZrB,EAAYvB,OAAO0C,GAAY7C,MAAK,SAAAqC,GAClCnB,EAAS9B,EAAM4D,OAAOX,IACtBjB,EAAW,QA+CX,UACE,uBACE6B,MAAO9B,EACP+B,SA9CiB,SAACP,GAAD,OAAWvB,EAAWuB,EAAMQ,OAAOF,QA+CpDG,YAAa,kBAEf,wBAAQC,KAAK,SAAb,qBAEF,cAAC,EAAD,Q,MC7EJC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.65bf6e02.chunk.js","sourcesContent":["import React from 'react'\n\nconst Note = ({notes, toggleImportance}) => {\n    const label = notes.important\n    ? 'make not important' : 'make important'\n    return (\n        <li className=\"note\">\n            {notes.content}{' '}\n            <button onClick={toggleImportance}>\n                {label}\n            </button>\n        </li>\n    )\n}\n\nexport default Note\n","import axios from 'axios'\n\nconst baseUrl = '/api/notes';\n\nconst getAll = () => {\n    const request = axios.get(baseUrl)\n    return request.then(response => response.data)\n}\n\nconst create = newObject => {\n    const request = axios.post(baseUrl, newObject)\n    return request.then(response => response.data)\n}\n\nconst update = (id, newObject) => {\n    const request = axios.put(`${baseUrl}/${id}`, newObject)\n    return request.then(response => response.data)\n}\n\nconst exportedRequests = { getAll, create, update }\n\nexport default exportedRequests;","import React from 'react'\n\nconst Notification = ({ message }) => {\n    if (message === null) {\n      return null\n    }\n  \n    return (\n      <div className=\"error\">\n        {message}\n      </div>\n    )\n  }\n\nexport default Notification\n","import React from 'react'\n\nconst Footer = () => {\n    const footerStyle = {\n      color: 'green',\n      fontStyle: 'italic',\n      fontSize: 16\n    }\n    return (\n      <div style={footerStyle}>\n        <br />\n        <em>Note app, Department of Computer Science, University of Helsinki 2021</em>\n      </div>\n    )\n  }\n\nexport default Footer\n\n","import React, { useState, useEffect } from \"react\";\nimport Note from \"./components/Note\";\nimport noteService from './services/notes'\nimport Notification from './components/Notification'\nimport Footer from './components/Footer'\n\nconst App = () => {\n  const [notes, setNotes] = useState([]);\n  const [newNote, setNewNote] = useState(\"\");\n  const [showAll, setShowAll] = useState(false);\n  const [errorMessage, setErrorMessage] = useState(null);\n\n  useEffect(() => {\n    noteService.getAll().then((initialNotes) => {\n      setNotes(initialNotes);\n    });\n  }, []);\n\n  const addNote = (event) => {\n    event.preventDefault();\n    const noteObject = {\n      content: newNote,\n      date: new Date(),\n    };\n\n    noteService.create(noteObject).then(returnedNote => {\n      setNotes(notes.concat(returnedNote))\n      setNewNote('')\n    })\n  };\n\n  const handleNoteChange = (event) => setNewNote(event.target.value);\n\n  const notesToShow = showAll\n    ? notes\n    : notes.filter((note) => note.important === true);\n\n    const toggleImportanceOf = id => {\n      const note = notes.find(n => n.id === id)\n      const changedNote = { ...note, important: !note.important }\n\n      console.log(`importance of ${id} needs to be toggled`)\n\n      noteService.update(id, changedNote).then(returnedNote => {\n        setNotes(notes.map(note => note.id !== id ? note : returnedNote))\n      }).catch(error => {\n        setErrorMessage(\n          `Note '${note.content}' was already removed from server`\n        )\n        setTimeout(() => {\n          setErrorMessage(null)\n        }, 5000)\n        setNotes(notes.filter(n => n.id !== id))\n      })\n    }\n\n  return (\n    <div>\n      <h1>Notes</h1>\n      <Notification message={errorMessage} />\n      <div>\n        <button onClick={() => setShowAll(!showAll)}>\n          show {showAll ? \"important\" : \"all\"}\n        </button>\n      </div>\n      <ul>\n        {notesToShow.map((note) => (\n          <Note\n          key={note.id}\n          notes={note}\n          toggleImportance={() => toggleImportanceOf(note.id)}\n          />\n        ))}\n      </ul>\n      <form onSubmit={addNote}>\n        <input\n          value={newNote}\n          onChange={handleNoteChange}\n          placeholder={\"a new note...\"}\n        />\n        <button type=\"submit\">save</button>\n      </form>\n      <Footer />\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App.js'\nimport './index.css'\n\n  ReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}